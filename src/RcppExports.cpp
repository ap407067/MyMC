// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// monte_carlo
double monte_carlo(double S0, double k, double volatility, double interest_rate, double time_to_maturity, double barrier_level, int nReps);
RcppExport SEXP _myMC2_monte_carlo(SEXP S0SEXP, SEXP kSEXP, SEXP volatilitySEXP, SEXP interest_rateSEXP, SEXP time_to_maturitySEXP, SEXP barrier_levelSEXP, SEXP nRepsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type S0(S0SEXP);
    Rcpp::traits::input_parameter< double >::type k(kSEXP);
    Rcpp::traits::input_parameter< double >::type volatility(volatilitySEXP);
    Rcpp::traits::input_parameter< double >::type interest_rate(interest_rateSEXP);
    Rcpp::traits::input_parameter< double >::type time_to_maturity(time_to_maturitySEXP);
    Rcpp::traits::input_parameter< double >::type barrier_level(barrier_levelSEXP);
    Rcpp::traits::input_parameter< int >::type nReps(nRepsSEXP);
    rcpp_result_gen = Rcpp::wrap(monte_carlo(S0, k, volatility, interest_rate, time_to_maturity, barrier_level, nReps));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_hello
List rcpp_hello();
RcppExport SEXP _myMC2_rcpp_hello() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rcpp_hello());
    return rcpp_result_gen;
END_RCPP
}
// rcpp_hello_world
List rcpp_hello_world();
RcppExport SEXP _myMC2_rcpp_hello_world() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rcpp_hello_world());
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_myMC2_monte_carlo", (DL_FUNC) &_myMC2_monte_carlo, 7},
    {"_myMC2_rcpp_hello", (DL_FUNC) &_myMC2_rcpp_hello, 0},
    {"_myMC2_rcpp_hello_world", (DL_FUNC) &_myMC2_rcpp_hello_world, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_myMC2(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
